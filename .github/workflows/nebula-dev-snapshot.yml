name: "Publish snapshot to NetflixOSS and Maven Central"

on:
  push:
    branches:
      - dev-snapshot

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_DB: genie
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: genie
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Configure MySQL database
        run: |
          sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port 3306 -uroot -ppassword -e "SET GLOBAL innodb_file_format = barracuda;"
          mysql --host 127.0.0.1 --port 3306 -uroot -ppassword -e "SET GLOBAL innodb_file_per_table = 'on';"
          mysql --host 127.0.0.1 --port 3306 -uroot -ppassword -e "SET GLOBAL innodb_large_prefix = 'on'"
          mysql --host 127.0.0.1 --port 3306 -uroot -ppassword -e "show variables like '%innodb_file%';"
      - name: Configure Genie temp folders
        run: |
          mkdir -p /tmp/genie/cache /tmp/genie/archives /tmp/genie/jobs
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/cache@v2
        id: gradle-cache
        with:
          path: |
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
      - uses: actions/cache@v2
        id: gradle-wrapper-cache
        with:
          path: |
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradlewrapper-${{ hashFiles('gradle/wrapper/*') }}
      - uses: actions/cache@v1
        id: genie-ui-node-modules
        with:
          path: genie-ui/node_modules/
          key: ${{ runner.os }}-genie-ui-node-modules-${{ hashFiles('genie-ui/node_modules/*') }}
          restore-keys: |
            - ${{ runner.os }}-genie-ui-node-modules-
      - uses: actions/cache@v1
        id: genie-ui-gradle-nodejs
        with:
          path: genie-ui/.gradle/nodejs
          key: ${{ runner.os }}-genie-ui-gradle-nodejs-${{ hashFiles('genie-ui/.gradle/nodejs/*') }}
          restore-keys: |
            - ${{ runner.os }}-genie-ui-gradle-nodejs-
      - uses: actions/cache@v1
        id: genie-ui-gradle-npm
        with:
          path: genie-ui/.gradle/npm
          key: ${{ runner.os }}-genie-ui-gradle-npm-${{ hashFiles('genie-ui/.gradle/npm/*') }}
          restore-keys: |
            - ${{ runner.os }}-genie-ui-gradle-npm-
      - name: Build
        run: ./gradlew --debug build snapshot dockerPush -x check
        env:
          NETFLIX_OSS_SIGNING_KEY: ${{ secrets.ORG_SIGNING_KEY }}
          NETFLIX_OSS_SIGNING_PASSWORD: ${{ secrets.ORG_SIGNING_PASSWORD }}
          NETFLIX_OSS_REPO_USERNAME: ${{ secrets.ORG_NETFLIXOSS_USERNAME }}
          NETFLIX_OSS_REPO_PASSWORD: ${{ secrets.ORG_NETFLIXOSS_PASSWORD }}
          DOCKER_USER: ${{ secrets.ORG_NETFLIXOSS_DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.ORG_NETFLIXOSS_DOCKERHUB_PASSWORD }}
      - name: Coveralls
        uses: codecov/codecov-action@v1
